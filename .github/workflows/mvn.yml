# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: Java CI

on:
  push:
    branches:
      - master

jobs:
  prepare:
    name: Prepares build environment
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check_commit.outputs.result }}
      commit: ${{ steps.latest_commit.outputs.commit }}
    steps:
    - name: Clone
      uses: actions/checkout@v3
    - name: Set latest_commit
      id: latest_commit
      working-directory: ruby
      run: echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    - name: Check if latest commit already built
      uses: actions/github-script@v6
      id: check_commit
      with:
        script: |
          const latestDevCommit = "${{ steps.latest_commit.outputs.commit }}"
          const { owner, repo } = context.repo
          let { data: release } = await github.rest.repos.getLatestRelease({ owner, repo })
          const latestReleaseCommit = release.body.split('@')[1]
          console.log(`Latest release commit: ${latestReleaseCommit}`)
          console.log(`Latest ruby commit: ${latestDevCommit}`)
          if (latestReleaseCommit === latestDevCommit) {
            return 'false'
          } else {
            return 'true'
          }
        result-encoding: string

  java:
    runs-on: ubuntu-latest
    needs: [prepare]
    if: needs.prepare.outputs.should_build == 'true'
    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

  spigot:
    runs-on: ubuntu-latest
    needs: [prepare,java]
    if: needs.prepare.outputs.should_build == 'true'
    steps:
      - name: Build spigot
        shell: bash
        run: prepare.sh

  release:
    runs-on: ubuntu-latest
    needs: [prepare]
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: github.event_name != 'push'

      - name: Set tag name
        id: tag
        run: |
          if [[ "${{ github.event_name }}" != "push" ]]; then
            tag=v$(date +%Y%m%d.%H%M%S)
          else
            tag=$(basename "${{ github.ref }}")
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          tag="${{ steps.tag.outputs.tag }}"
          body="runsafe/framework@${{ needs.prepare.outputs.commit }}"
          gh release create --draft "$tag" --title "$tag" --notes "$body"

  build:
    runs-on: ubuntu-latest
    needs: [prepare,spigot,release]
    if: needs.prepare.outputs.should_build == 'true'
    steps:
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  publish:
    name: Publish Release
    needs: [release, build]
    runs-on: ubuntu-latest
    steps:
      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release edit "${{ needs.release.outputs.tag }}" --draft=false
      - uses: eregon/keep-last-n-releases@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          n: 3
          remove_tags_without_release: true